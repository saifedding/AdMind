"""Add meta, targeting, lead_form, and creatives columns and remove obsolete fields

Revision ID: a2feb1e20f39
Revises: 5a527db67d43
Create Date: 2025-07-06 19:37:34.588344

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a2feb1e20f39'
down_revision: Union[str, None] = '5a527db67d43'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ads', sa.Column('meta', sa.JSON(), nullable=True))
    op.add_column('ads', sa.Column('targeting', sa.JSON(), nullable=True))
    op.add_column('ads', sa.Column('lead_form', sa.JSON(), nullable=True))
    op.add_column('ads', sa.Column('creatives', sa.JSON(), nullable=True))
    op.alter_column('ads', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('ads', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_index('ix_ads_advertiser_page_id', table_name='ads')
    op.drop_index('ix_ads_campaign_id', table_name='ads')
    op.create_index(op.f('ix_ads_competitor_id'), 'ads', ['competitor_id'], unique=False)
    op.drop_column('ads', 'targeting_data')
    op.drop_column('ads', 'lead_form_standalone_fields')
    op.drop_column('ads', 'landing_page_url')
    op.drop_column('ads', 'collation_id')
    op.drop_column('ads', 'page_id')
    op.drop_column('ads', 'advertiser_page_url')
    op.drop_column('ads', 'advertiser_page_id')
    op.drop_column('ads', 'advertiser_page_likes')
    op.drop_column('ads', 'ad_copy')
    op.drop_column('ads', 'lead_form_questions')
    op.drop_column('ads', 'impressions_text')
    op.drop_column('ads', 'advertiser_page_name')
    op.drop_column('ads', 'is_active')
    op.drop_column('ads', 'campaign_id')
    op.drop_column('ads', 'cta_text')
    op.drop_column('ads', 'meta_start_date')
    op.drop_column('ads', 'meta_display_format')
    op.drop_column('ads', 'advertiser_page_profile_picture')
    op.drop_column('ads', 'start_date')
    op.drop_column('ads', 'platforms')
    op.drop_column('ads', 'cta_type')
    op.drop_column('ads', 'meta_is_active')
    op.drop_column('ads', 'media_url')
    op.drop_column('ads', 'meta_end_date')
    op.drop_column('ads', 'is_enhanced_processed')
    op.drop_column('ads', 'page_name')
    op.drop_column('ads', 'media_type')
    op.drop_column('ads', 'end_date')
    op.drop_column('ads', 'enhanced_processing_version')
    op.drop_column('ads', 'display_format')
    op.drop_column('ads', 'creatives_data')
    op.drop_column('ads', 'meta_cta_type')
    op.drop_column('ads', 'publisher_platform')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ads', sa.Column('publisher_platform', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('meta_cta_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('creatives_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('display_format', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('enhanced_processing_version', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('end_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('media_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('page_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('is_enhanced_processed', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('ads', sa.Column('meta_end_date', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('media_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('meta_is_active', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('cta_type', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('platforms', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('start_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('advertiser_page_profile_picture', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('meta_display_format', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('meta_start_date', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('cta_text', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('campaign_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('advertiser_page_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('impressions_text', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('lead_form_questions', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('ad_copy', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('advertiser_page_likes', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('advertiser_page_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('advertiser_page_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('page_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('collation_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('landing_page_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('lead_form_standalone_fields', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('targeting_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_ads_competitor_id'), table_name='ads')
    op.create_index('ix_ads_campaign_id', 'ads', ['campaign_id'], unique=False)
    op.create_index('ix_ads_advertiser_page_id', 'ads', ['advertiser_page_id'], unique=False)
    op.alter_column('ads', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('ads', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('ads', 'creatives')
    op.drop_column('ads', 'lead_form')
    op.drop_column('ads', 'targeting')
    op.drop_column('ads', 'meta')
    # ### end Alembic commands ###
