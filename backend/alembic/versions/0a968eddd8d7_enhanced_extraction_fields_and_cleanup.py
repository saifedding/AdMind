"""enhanced_extraction_fields_and_cleanup

Revision ID: 0a968eddd8d7
Revises: d26d6ee785d3
Create Date: 2025-07-06 15:07:39.350024

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0a968eddd8d7'
down_revision: Union[str, None] = 'd26d6ee785d3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ads', sa.Column('creatives_data', sa.JSON(), nullable=True))
    op.add_column('ads', sa.Column('is_enhanced_processed', sa.Boolean(), nullable=False))
    op.add_column('ads', sa.Column('enhanced_processing_version', sa.String(), nullable=True))
    op.add_column('ads', sa.Column('landing_page_url', sa.String(), nullable=True))
    op.add_column('ads', sa.Column('collation_id', sa.String(), nullable=True))
    op.alter_column('ads', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.alter_column('ads', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True,
               existing_server_default=sa.text('now()'))
    op.drop_column('ads', 'extraction_version')
    op.drop_column('ads', 'page_like_count')
    op.drop_column('ads', 'main_link_description')
    op.drop_column('ads', 'main_link_url')
    op.drop_column('ads', 'card_bodies')
    op.drop_column('ads', 'extra_links')
    op.drop_column('ads', 'page_profile_picture_url')
    op.drop_column('ads', 'contains_sensitive_content')
    op.drop_column('ads', 'form_details')
    op.drop_column('ads', 'extraction_date')
    op.drop_column('ads', 'card_count')
    op.drop_column('ads', 'page_profile_uri')
    op.drop_column('ads', 'main_caption')
    op.drop_column('ads', 'card_complete_data')
    op.drop_column('ads', 'contains_digital_created_media')
    op.drop_column('ads', 'currency')
    op.drop_column('ads', 'main_title')
    op.drop_column('ads', 'card_titles')
    op.drop_column('ads', 'main_video_urls')
    op.drop_column('ads', 'spend')
    op.drop_column('ads', 'page_categories')
    op.drop_column('ads', 'running_countries')
    op.drop_column('ads', 'card_urls')
    op.drop_column('ads', 'impressions_index')
    op.drop_column('ads', 'extra_texts')
    op.drop_column('ads', 'main_body_text')
    op.drop_column('ads', 'creatives')
    op.drop_column('ads', 'card_cta_texts')
    op.drop_column('ads', 'targeted_countries')
    op.drop_column('ads', 'main_image_urls')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ads', sa.Column('main_image_urls', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('targeted_countries', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('card_cta_texts', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('creatives', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('main_body_text', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('extra_texts', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('impressions_index', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('card_urls', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('running_countries', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('page_categories', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('spend', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('main_video_urls', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('card_titles', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('main_title', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('currency', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('contains_digital_created_media', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('card_complete_data', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('main_caption', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('page_profile_uri', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('card_count', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('extraction_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('form_details', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('contains_sensitive_content', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('page_profile_picture_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('extra_links', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('card_bodies', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('main_link_url', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('main_link_description', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('page_like_count', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('ads', sa.Column('extraction_version', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.alter_column('ads', 'updated_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.alter_column('ads', 'created_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False,
               existing_server_default=sa.text('now()'))
    op.drop_column('ads', 'collation_id')
    op.drop_column('ads', 'landing_page_url')
    op.drop_column('ads', 'enhanced_processing_version')
    op.drop_column('ads', 'is_enhanced_processed')
    op.drop_column('ads', 'creatives_data')
    # ### end Alembic commands ###
